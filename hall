#!/usr/bin/python
# Import required libraries
import time
import datetime
import sys
import RPi.GPIO as GPIO

def sensorCallback(channel):
  # Called if sensor output changes
  global vol
  global stat
  timestamp = time.time()
  stamp = datetime.datetime.fromtimestamp(timestamp).strftime('%H:%M:%S')
  if GPIO.input(channel):
  	try:
		vol = vol+1

	except:
		vol = 0
	pass
  else:
	try:
                vol = vol+1
        except:
                vol = 0
        pass
#  try:
  if vol == 0:
 	stat = 0
  else:
	stat = 1

	
def main():
	while True:
		GPIO.setmode(GPIO.BCM)
		GPIO.setup(22 , GPIO.IN, pull_up_down=GPIO.PUD_UP)
		GPIO.setup(23 , GPIO.IN, pull_up_down=GPIO.PUD_UP)  
		try:
			GPIO.add_event_detect(22, GPIO.BOTH, callback=sensorCallback, bouncetime=200)
		except:
			pass
		try:
			GPIO.add_event_detect(23, GPIO.BOTH, callback=sensorCallback, bouncetime=200)
		except:
			pass
		try:
			t_end = time.time() + 1
			while time.time() < t_end:
				time.sleep(0.1)
		except KeyboardInterrupt:
    			# Reset GPIO settings
    			GPIO.cleanup()
			sys.exit(0)
		try:
			print channel, stat
		except:
			print "Nothin"
# Tell GPIO library to use GPIO references

if __name__=="__main__":
   timeout = time.time() + 5

   main()
