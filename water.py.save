
def sensorCallback(channel):
#       from datetime import datetime as dt
        import datetime
        # Called if sensor output changes
        global vol
        global stat
        now = datetime.datetime.now()
        nowDate = now.strftime("%Y-%m-%d %H:%M:%S")
        nowTime = now.strftime("%H:%M:%S")
        if GPIO.input(channel):
                try:
                        vol = vol+1

                except:
                        vol = 0
                pass
        else:
                try:
                        vol = vol+1
                except:
                        vol = 0
                pass
        if vol > 0:
                print ("")
                time.sleep(5)
                GPIO.output(12, GPIO.LOW)
                time.sleep(2)

                try:
                        Shed=dbShedRead()
                        mode = Shed[1]
                        period = Shed[2]
                        period = 3
                except TypeError:
                        print "no previous entry"
                        period = 10
                        mode = 'Vegetative'
                LastFlood= nowDate
                NextFlood = datetime.datetime.now() + datetime.timedelta(hours = int(period))
                NextFlood = NextFlood.strftime("%Y-%m-%d %H:%M:%S")
                Farm = mysql.connector.connect(
                        host="localhost",
                        user="pi",
                        passwd="a-51d41e",
                        database="Farm"
                )
                SheD = Farm.cursor()
#+---------------------+-----------+--------+-----------+-----------+
#| date                | mode      | period | LastFlood | NextFlood |
#+---------------------+-----------+--------+-----------+-----------+
#| 2019-12-28 09:56:04 | flowering |     90 | 09:56:04  | 09:56:04  |
#+---------------------+-----------+--------+-----------+-----------+
                sql = 'update Farm.Shed set mode = %s ,period = %s, LastFlood = %s ,NextFlood = %s where date = ( select max(date))'
                val = (mode,period,LastFlood,NextFlood)
                SheD.execute(sql, val)
                Farm.commit()








def Flood():
        Date = datetime.datetime.now()
        Date = Date.strftime("%Y-%m-%d %H:%M:%S")
        try:
                Shed=dbShedRead()
                mode = Shed[1]
                period = Shed[2]
                NextFlood = Shed[4]
                PStatus = GPIO.input(12)
                NextFlood = str(NextFlood)

                if Date > NextFlood  and PStatus == 0:
                        Valve("f")
                        GPIO.output(26, GPIO.HIGH)
                        GPIO.output(12, GPIO.HIGH)   # <---------------- change to HIGH when theres water or a way too check

                        Farm = mysql.connector.connect(
                                host="localhost",
                                user="pi",
                                passwd="a-51d41e",
                                database="Farm"
                        )
                        SheD = Farm.cursor()
#+---------------------+-----------+--------+-----------+-----------+
#| date                | mode      | period | LastFlood | NextFlood |
#+---------------------+-----------+--------+-----------+-----------+
#| 2019-12-28 09:56:04 | flowering |     90 | 09:56:04  | 09:56:04  |
#+---------------------+-----------+--------+-----------+-----------+
                        sql = "insert INTO Farm.Shed (date,mode,period,LastFlood,NextFlood) VALUES (%s, %s, %s, %s, %s)"
                        val = (Date,mode,period,Date,NextFlood)
                        SheD.execute(sql, val)
                        Farm.commit()



        except TypeError:
                GPIO.output(26, GPIO.HIGH)
                GPIO.output(12, GPIO.HIGH)   # <---------------- change to HIGH when theres water or a way too check
                PStatus = GPIO.input(12)
                return PStatus

